"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var __defProp=Object.defineProperty,__name=(e,t)=>__defProp(e,"name",{value:t,configurable:!0}),_helpers=require("@turf/helpers");function coordEach(e,t,r){if(null!==e)for(var n,o,i,a,l,c,u,s,g=0,f=0,d=e.type,h="FeatureCollection"===d,p="Feature"===d,m=h?e.features.length:1,v=0;v<m;v++){l=(s=!!(u=h?e.features[v].geometry:p?e.geometry:e)&&"GeometryCollection"===u.type)?u.geometries.length:1;for(var y=0;y<l;y++){var _=0,E=0;if(null!==(a=s?u.geometries[y]:u)){c=a.coordinates;var P=a.type;switch(g=!r||"Polygon"!==P&&"MultiPolygon"!==P?0:1,P){case null:break;case"Point":if(!1===t(c,f,v,_,E))return!1;f++,_++;break;case"LineString":case"MultiPoint":for(n=0;n<c.length;n++){if(!1===t(c[n],f,v,_,E))return!1;f++,"MultiPoint"===P&&_++}"LineString"===P&&_++;break;case"Polygon":case"MultiLineString":for(n=0;n<c.length;n++){for(o=0;o<c[n].length-g;o++){if(!1===t(c[n][o],f,v,_,E))return!1;f++}"MultiLineString"===P&&_++,"Polygon"===P&&E++}"Polygon"===P&&_++;break;case"MultiPolygon":for(n=0;n<c.length;n++){for(E=0,o=0;o<c[n].length;o++){for(i=0;i<c[n][o].length-g;i++){if(!1===t(c[n][o][i],f,v,_,E))return!1;f++}E++}_++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===coordEach(a.geometries[n],t,r))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function coordReduce(e,t,r,n){var o=r;return coordEach(e,(function(e,n,i,a,l){o=0===n&&void 0===r?e:t(o,e,n,i,a,l)}),n),o}function propEach(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length&&!1!==t(e.features[r].properties,r);r++);break;case"Feature":t(e.properties,0)}}function propReduce(e,t,r){var n=r;return propEach(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n}function featureEach(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length&&!1!==t(e.features[r],r);r++);}function featureReduce(e,t,r){var n=r;return featureEach(e,(function(e,o){n=0===o&&void 0===r?e:t(n,e,o)})),n}function coordAll(e){var t=[];return coordEach(e,(function(e){t.push(e)})),t}function geomEach(e,t){var r,n,o,i,a,l,c,u,s,g,f=0,d="FeatureCollection"===e.type,h="Feature"===e.type,p=d?e.features.length:1;for(r=0;r<p;r++){for(l=d?e.features[r].geometry:h?e.geometry:e,u=d?e.features[r].properties:h?e.properties:{},s=d?e.features[r].bbox:h?e.bbox:void 0,g=d?e.features[r].id:h?e.id:void 0,a=(c=!!l&&"GeometryCollection"===l.type)?l.geometries.length:1,o=0;o<a;o++)if(null!==(i=c?l.geometries[o]:l))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===t(i,f,u,s,g))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===t(i.geometries[n],f,u,s,g))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===t(null,f,u,s,g))return!1;f++}}function geomReduce(e,t,r){var n=r;return geomEach(e,(function(e,o,i,a,l){n=0===o&&void 0===r?e:t(n,e,o,i,a,l)})),n}function flattenEach(e,t){geomEach(e,(function(e,r,n,o,i){var a,l=null===e?null:e.type;switch(l){case null:case"Point":case"LineString":case"Polygon":return!1!==t(_helpers.feature.call(void 0,e,n,{bbox:o,id:i}),r,0)&&void 0}switch(l){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var c=0;c<e.coordinates.length;c++){var u={type:a,coordinates:e.coordinates[c]};if(!1===t(_helpers.feature.call(void 0,u,n),r,c))return!1}}))}function flattenReduce(e,t,r){var n=r;return flattenEach(e,(function(e,o,i){n=0===o&&0===i&&void 0===r?e:t(n,e,o,i)})),n}function segmentEach(e,t){flattenEach(e,(function(e,r,n){var o=0;if(e.geometry){var i=e.geometry.type;if("Point"!==i&&"MultiPoint"!==i){var a,l=0,c=0,u=0;return!1!==coordEach(e,(function(i,s,g,f,d){if(void 0===a||r>l||f>c||d>u)return a=i,l=r,c=f,u=d,void(o=0);var h=_helpers.lineString.call(void 0,[a,i],e.properties);if(!1===t(h,r,n,d,o))return!1;o++,a=i}))&&void 0}}}))}function segmentReduce(e,t,r){var n=r,o=!1;return segmentEach(e,(function(e,i,a,l,c){n=!1===o&&void 0===r?e:t(n,e,i,a,l,c),o=!0})),n}function lineEach(e,t){if(!e)throw new Error("geojson is required");flattenEach(e,(function(e,r,n){if(null!==e.geometry){var o=e.geometry.type,i=e.geometry.coordinates;switch(o){case"LineString":if(!1===t(e,r,n,0,0))return!1;break;case"Polygon":for(var a=0;a<i.length;a++)if(!1===t(_helpers.lineString.call(void 0,i[a],e.properties),r,n,a))return!1}}}))}function lineReduce(e,t,r){var n=r;return lineEach(e,(function(e,o,i,a){n=0===o&&void 0===r?e:t(n,e,o,i,a)})),n}function findSegment(e,t){if(t=t||{},!_helpers.isObject.call(void 0,t))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.segmentIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),l=l||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var c=r.coordinates;switch(r.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=c.length+a-1),_helpers.lineString.call(void 0,[c[a],c[a+1]],l,t);case"Polygon":return i<0&&(i=c.length+i),a<0&&(a=c[i].length+a-1),_helpers.lineString.call(void 0,[c[i][a],c[i][a+1]],l,t);case"MultiLineString":return o<0&&(o=c.length+o),a<0&&(a=c[o].length+a-1),_helpers.lineString.call(void 0,[c[o][a],c[o][a+1]],l,t);case"MultiPolygon":return o<0&&(o=c.length+o),i<0&&(i=c[o].length+i),a<0&&(a=c[o][i].length-a-1),_helpers.lineString.call(void 0,[c[o][i][a],c[o][i][a+1]],l,t)}throw new Error("geojson is invalid")}function findPoint(e,t){if(t=t||{},!_helpers.isObject.call(void 0,t))throw new Error("options is invalid");var r,n=t.featureIndex||0,o=t.multiFeatureIndex||0,i=t.geometryIndex||0,a=t.coordIndex||0,l=t.properties;switch(e.type){case"FeatureCollection":n<0&&(n=e.features.length+n),l=l||e.features[n].properties,r=e.features[n].geometry;break;case"Feature":l=l||e.properties,r=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":r=e;break;default:throw new Error("geojson is invalid")}if(null===r)return null;var c=r.coordinates;switch(r.type){case"Point":return _helpers.point.call(void 0,c,l,t);case"MultiPoint":return o<0&&(o=c.length+o),_helpers.point.call(void 0,c[o],l,t);case"LineString":return a<0&&(a=c.length+a),_helpers.point.call(void 0,c[a],l,t);case"Polygon":return i<0&&(i=c.length+i),a<0&&(a=c[i].length+a),_helpers.point.call(void 0,c[i][a],l,t);case"MultiLineString":return o<0&&(o=c.length+o),a<0&&(a=c[o].length+a),_helpers.point.call(void 0,c[o][a],l,t);case"MultiPolygon":return o<0&&(o=c.length+o),i<0&&(i=c[o].length+i),a<0&&(a=c[o][i].length-a),_helpers.point.call(void 0,c[o][i][a],l,t)}throw new Error("geojson is invalid")}__name(coordEach,"coordEach"),__name(coordReduce,"coordReduce"),__name(propEach,"propEach"),__name(propReduce,"propReduce"),__name(featureEach,"featureEach"),__name(featureReduce,"featureReduce"),__name(coordAll,"coordAll"),__name(geomEach,"geomEach"),__name(geomReduce,"geomReduce"),__name(flattenEach,"flattenEach"),__name(flattenReduce,"flattenReduce"),__name(segmentEach,"segmentEach"),__name(segmentReduce,"segmentReduce"),__name(lineEach,"lineEach"),__name(lineReduce,"lineReduce"),__name(findSegment,"findSegment"),__name(findPoint,"findPoint"),exports.coordAll=coordAll,exports.coordEach=coordEach,exports.coordReduce=coordReduce,exports.featureEach=featureEach,exports.featureReduce=featureReduce,exports.findPoint=findPoint,exports.findSegment=findSegment,exports.flattenEach=flattenEach,exports.flattenReduce=flattenReduce,exports.geomEach=geomEach,exports.geomReduce=geomReduce,exports.lineEach=lineEach,exports.lineReduce=lineReduce,exports.propEach=propEach,exports.propReduce=propReduce,exports.segmentEach=segmentEach,exports.segmentReduce=segmentReduce;