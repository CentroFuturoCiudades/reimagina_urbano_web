"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var __defProp=Object.defineProperty,__name=(e,r)=>__defProp(e,"name",{value:r,configurable:!0}),_clone=require("@turf/clone"),_center=require("@turf/center"),_centroid=require("@turf/centroid"),_bbox=require("@turf/bbox"),_rhumbbearing=require("@turf/rhumb-bearing"),_rhumbdistance=require("@turf/rhumb-distance"),_rhumbdestination=require("@turf/rhumb-destination"),_meta=require("@turf/meta"),_helpers=require("@turf/helpers"),_invariant=require("@turf/invariant");function transformScale(e,r,t){if(t=t||{},!_helpers.isObject.call(void 0,t))throw new Error("options is invalid");var a=t.origin,i=t.mutate;if(!e)throw new Error("geojson required");if("number"!==typeof r||r<=0)throw new Error("invalid factor");var n=Array.isArray(a)||"object"===typeof a;return!0!==i&&(e=_clone.clone.call(void 0,e)),"FeatureCollection"!==e.type||n?scale(e,r,a):(_meta.featureEach.call(void 0,e,(function(t,i){e.features[i]=scale(t,r,a)})),e)}function scale(e,r,t){var a="Point"===_invariant.getType.call(void 0,e);return t=defineOrigin(e,t),1===r||a||(_meta.coordEach.call(void 0,e,(function(e){var a=_rhumbdistance.rhumbDistance.call(void 0,t,e),i=_rhumbbearing.rhumbBearing.call(void 0,t,e),n=a*r,o=_invariant.getCoords.call(void 0,_rhumbdestination.rhumbDestination.call(void 0,t,n,i));e[0]=o[0],e[1]=o[1],3===e.length&&(e[2]*=r)})),delete e.bbox),e}function defineOrigin(e,r){if(void 0!==r&&null!==r||(r="centroid"),Array.isArray(r)||"object"===typeof r)return _invariant.getCoord.call(void 0,r);var t=e.bbox?e.bbox:_bbox.bbox.call(void 0,e,{recalculate:!0}),a=t[0],i=t[1],n=t[2],o=t[3];switch(r){case"sw":case"southwest":case"westsouth":case"bottomleft":return _helpers.point.call(void 0,[a,i]);case"se":case"southeast":case"eastsouth":case"bottomright":return _helpers.point.call(void 0,[n,i]);case"nw":case"northwest":case"westnorth":case"topleft":return _helpers.point.call(void 0,[a,o]);case"ne":case"northeast":case"eastnorth":case"topright":return _helpers.point.call(void 0,[n,o]);case"center":return _center.center.call(void 0,e);case void 0:case null:case"centroid":return _centroid.centroid.call(void 0,e);default:throw new Error("invalid origin")}}__name(transformScale,"transformScale"),__name(scale,"scale"),__name(defineOrigin,"defineOrigin");var turf_transform_scale_default=transformScale;exports.default=turf_transform_scale_default,exports.transformScale=transformScale;