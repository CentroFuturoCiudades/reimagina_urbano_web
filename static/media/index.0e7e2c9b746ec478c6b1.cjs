"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var __defProp=Object.defineProperty,__name=(o,e)=>__defProp(o,"name",{value:e,configurable:!0}),_helpers=require("@turf/helpers"),_invariant=require("@turf/invariant");function polygonToLine(o,e={}){const n=_invariant.getGeom.call(void 0,o);switch(e.properties||"Feature"!==o.type||(e.properties=o.properties),n.type){case"Polygon":return singlePolygonToLine(n,e);case"MultiPolygon":return multiPolygonToLine(n,e);default:throw new Error("invalid poly")}}function singlePolygonToLine(o,e={}){return coordsToLine(_invariant.getGeom.call(void 0,o).coordinates,e.properties?e.properties:"Feature"===o.type?o.properties:{})}function multiPolygonToLine(o,e={}){const n=_invariant.getGeom.call(void 0,o).coordinates,i=e.properties?e.properties:"Feature"===o.type?o.properties:{},r=[];return n.forEach((o=>{r.push(coordsToLine(o,i))})),_helpers.featureCollection.call(void 0,r)}function coordsToLine(o,e){return o.length>1?_helpers.multiLineString.call(void 0,o,e):_helpers.lineString.call(void 0,o[0],e)}__name(polygonToLine,"polygonToLine"),__name(singlePolygonToLine,"singlePolygonToLine"),__name(multiPolygonToLine,"multiPolygonToLine"),__name(coordsToLine,"coordsToLine");var turf_polygon_to_line_default=polygonToLine;exports.coordsToLine=coordsToLine,exports.default=turf_polygon_to_line_default,exports.multiPolygonToLine=multiPolygonToLine,exports.polygonToLine=polygonToLine,exports.singlePolygonToLine=singlePolygonToLine;